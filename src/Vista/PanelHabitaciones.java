/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package Vista;

import Controlador.ControladorHabitaciones;
import Modelo.Habitacion.Habitacion;
import javax.swing.JOptionPane;

/**
 *
 * @author Tamara Alison
 */
public class PanelHabitaciones extends javax.swing.JFrame {

    private ControladorHabitaciones controlador;

    /**
     * Creates new form PanelHabitaciones
     */
    public PanelHabitaciones() {
        initComponents();
        controlador = new ControladorHabitaciones();

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        txtNumero = new javax.swing.JTextField();
        txtTipo = new javax.swing.JTextField();
        chkDisponible = new javax.swing.JCheckBox();
        btnAgregar = new javax.swing.JButton();
        btnEliminar = new javax.swing.JButton();
        btnBuscar = new javax.swing.JButton();
        btnSiguiente = new javax.swing.JButton();
        btnMostrar = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        areaResultado = new javax.swing.JTextArea();
        jScrollBar1 = new javax.swing.JScrollBar();
        btnAnterior = new javax.swing.JButton();
        btnPushMasUsada = new javax.swing.JButton();
        btnPopMasUsada = new javax.swing.JButton();
        btnEncolarLimpieza = new javax.swing.JButton();
        btnDesencolarLimpieza = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        btnOrdenar = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("NÃºmero :");

        jLabel2.setText("Tipo:");

        txtTipo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtTipoActionPerformed(evt);
            }
        });

        chkDisponible.setText("Disponible");
        chkDisponible.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chkDisponibleActionPerformed(evt);
            }
        });

        btnAgregar.setText("Agregar");
        btnAgregar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAgregarActionPerformed(evt);
            }
        });

        btnEliminar.setText("Eliminar");
        btnEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEliminarActionPerformed(evt);
            }
        });

        btnBuscar.setText("Buscar");
        btnBuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBuscarActionPerformed(evt);
            }
        });

        btnSiguiente.setText("Siguiente");
        btnSiguiente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSiguienteActionPerformed(evt);
            }
        });

        btnMostrar.setText("Mostrar Todo ");
        btnMostrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnMostrarActionPerformed(evt);
            }
        });

        areaResultado.setColumns(20);
        areaResultado.setRows(5);
        jScrollPane1.setViewportView(areaResultado);

        btnAnterior.setText("Anterior");
        btnAnterior.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAnteriorActionPerformed(evt);
            }
        });

        btnPushMasUsada.setText("Usada (push)");
        btnPushMasUsada.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPushMasUsadaActionPerformed(evt);
            }
        });

        btnPopMasUsada.setText("Quitar Usada (pop)");
        btnPopMasUsada.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPopMasUsadaActionPerformed(evt);
            }
        });

        btnEncolarLimpieza.setText("Encolar Limpieza ");
        btnEncolarLimpieza.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEncolarLimpiezaActionPerformed(evt);
            }
        });

        btnDesencolarLimpieza.setText("Desencolar Limpieza");
        btnDesencolarLimpieza.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDesencolarLimpiezaActionPerformed(evt);
            }
        });

        jLabel4.setText("Gestion de Habitaciones");

        btnOrdenar.setText("Ordenar");
        btnOrdenar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnOrdenarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 501, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jScrollBar1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(3, 3, 3))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(btnMostrar, javax.swing.GroupLayout.PREFERRED_SIZE, 256, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)))
                        .addComponent(btnOrdenar)
                        .addContainerGap(106, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 149, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addGroup(layout.createSequentialGroup()
                                            .addComponent(jLabel1)
                                            .addGap(29, 29, 29)
                                            .addComponent(txtNumero, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGroup(layout.createSequentialGroup()
                                            .addComponent(jLabel2)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(txtTipo, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                    .addComponent(chkDisponible, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(108, 108, 108)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(btnAnterior)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(btnDesencolarLimpieza)
                                            .addComponent(btnPushMasUsada)
                                            .addComponent(btnBuscar)
                                            .addComponent(btnAgregar))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(btnEliminar)
                                            .addComponent(btnSiguiente)
                                            .addComponent(btnPopMasUsada)
                                            .addComponent(btnEncolarLimpieza))))))
                        .addGap(0, 0, Short.MAX_VALUE))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel1)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(txtNumero, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(btnAgregar)
                        .addComponent(btnEliminar)))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(txtTipo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnBuscar)
                    .addComponent(btnSiguiente))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(btnPushMasUsada)
                        .addComponent(btnPopMasUsada))
                    .addComponent(chkDisponible))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 17, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnDesencolarLimpieza)
                    .addComponent(btnEncolarLimpieza))
                .addGap(9, 9, 9)
                .addComponent(btnAnterior)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnMostrar)
                    .addComponent(btnOrdenar))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 147, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollBar1, javax.swing.GroupLayout.PREFERRED_SIZE, 147, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void chkDisponibleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chkDisponibleActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_chkDisponibleActionPerformed

    private void txtTipoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtTipoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtTipoActionPerformed
    private void actualizarAreaResultados() {
        areaResultado.setText("");
        Object[] habitaciones = controlador.mostrarHabitaciones();
        if (habitaciones.length == 0) {
            areaResultado.append("No hay habitaciones registradas.\n");
        } else {
            for (Object obj : habitaciones) {
                Habitacion h = (Habitacion) obj;
                areaResultado.append("NÃºmero: " + h.getNumero() + ", Tipo: " + h.getTipo() + ", Disponible: " + h.isDisponible() + "\n");
            }
        }
    }
    private void limpiarCampos() {
        txtNumero.setText("");
        txtTipo.setText("");
        chkDisponible.setSelected(false);
    }

    private void btnAnteriorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAnteriorActionPerformed
        Habitacion h = controlador.navegarHabitacionesAnterior(); //
        if (h != null) {
            txtNumero.setText(String.valueOf(h.getNumero()));
            txtTipo.setText(h.getTipo());
            chkDisponible.setSelected(h.isDisponible());
            areaResultado.setText("HabitaciÃ³n actual:\n");
            areaResultado.append("NÃºmero: " + h.getNumero() + ", Tipo: " + h.getTipo() + ", Disponible: " + h.isDisponible() + "\n");
        } else {
            JOptionPane.showMessageDialog(this, "No hay habitaciones para navegar o la lista estÃ¡ vacÃ­a.", "InformaciÃ³n", JOptionPane.INFORMATION_MESSAGE);
        }
    }//GEN-LAST:event_btnAnteriorActionPerformed

    private void btnMostrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnMostrarActionPerformed
        actualizarAreaResultados();
    }//GEN-LAST:event_btnMostrarActionPerformed

    private void btnOrdenarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnOrdenarActionPerformed
        controlador.ordenarHabitacionesBurbuja(); //
        JOptionPane.showMessageDialog(this, "Habitaciones ordenadas por nÃºmero.");
        actualizarAreaResultados();
    }//GEN-LAST:event_btnOrdenarActionPerformed

    private void btnEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEliminarActionPerformed
        try {
            int numero = Integer.parseInt(txtNumero.getText());
            boolean eliminado = controlador.eliminarHabitacion(numero);
            if (eliminado) {
                JOptionPane.showMessageDialog(this, "HabitaciÃ³n " + numero + " eliminada con Ã©xito.");
                actualizarAreaResultados();
                limpiarCampos();
            } else {
                JOptionPane.showMessageDialog(this, "No se encontrÃ³ la habitaciÃ³n " + numero + ".", "Error", JOptionPane.ERROR_MESSAGE);
            }
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(this, "Por favor, ingrese un nÃºmero vÃ¡lido para la habitaciÃ³n a eliminar.", "Error", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btnEliminarActionPerformed

    private void btnAgregarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAgregarActionPerformed
          try {
            int numero = Integer.parseInt(txtNumero.getText());
            String tipo = txtTipo.getText();
            boolean disponible = chkDisponible.isSelected();

            if (tipo.isEmpty()) {
                JOptionPane.showMessageDialog(this, "El campo 'Tipo' no puede estar vacÃ­o.", "Error", JOptionPane.ERROR_MESSAGE);
                return;
            }

            Habitacion nuevaHabitacion = new Habitacion(numero, tipo, disponible);
            controlador.agregarHabitacion(nuevaHabitacion);
            JOptionPane.showMessageDialog(this, "HabitaciÃ³n " + numero + " agregada con Ã©xito.");
            actualizarAreaResultados();
            limpiarCampos();
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(this, "Por favor, ingrese un nÃºmero vÃ¡lido para la habitaciÃ³n.", "Error", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btnAgregarActionPerformed

    private void btnBuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBuscarActionPerformed
        try {
            int numero = Integer.parseInt(txtNumero.getText());
         
            Habitacion h = controlador.buscarHabitacionSecuencial(numero);
            if (h != null) {
                areaResultado.setText("HabitaciÃ³n encontrada:\n");
                areaResultado.append("NÃºmero: " + h.getNumero() + ", Tipo: " + h.getTipo() + ", Disponible: " + h.isDisponible() + "\n");
                
                txtNumero.setText(String.valueOf(h.getNumero()));
                txtTipo.setText(h.getTipo());
                chkDisponible.setSelected(h.isDisponible());
            } else {
                areaResultado.setText("No se encontrÃ³ la habitaciÃ³n " + numero + ".\n");
            }
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(this, "Por favor, ingrese un nÃºmero vÃ¡lido para la bÃºsqueda.", "Error", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btnBuscarActionPerformed

    private void btnSiguienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSiguienteActionPerformed
        Habitacion h = controlador.navegarHabitacionesSiguiente(); 
        if (h != null) {
            txtNumero.setText(String.valueOf(h.getNumero()));
            txtTipo.setText(h.getTipo());
            chkDisponible.setSelected(h.isDisponible());
            areaResultado.setText("HabitaciÃ³n actual:\n");
            areaResultado.append("NÃºmero: " + h.getNumero() + ", Tipo: " + h.getTipo() + ", Disponible: " + h.isDisponible() + "\n");
        } else {
            JOptionPane.showMessageDialog(this, "No hay habitaciones para navegar o la lista estÃ¡ vacÃ­a.", "InformaciÃ³n", JOptionPane.INFORMATION_MESSAGE);
        }
    }//GEN-LAST:event_btnSiguienteActionPerformed

    private void btnPushMasUsadaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPushMasUsadaActionPerformed
        try {
            int numero = Integer.parseInt(txtNumero.getText());
            Habitacion h = controlador.buscarHabitacionSecuencial(numero);
            if (h != null) {
                controlador.pushHabitacionMasUsada(h); 
                JOptionPane.showMessageDialog(this, "HabitaciÃ³n " + h.getNumero() + " marcada como usada (apilada).");
            } else {
                JOptionPane.showMessageDialog(this, "Primero ingrese o busque la habitaciÃ³n a marcar como usada.", "Error", JOptionPane.ERROR_MESSAGE);
            }
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(this, "Por favor, ingrese un nÃºmero de habitaciÃ³n para marcar como usada.", "Error", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btnPushMasUsadaActionPerformed

    private void btnPopMasUsadaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPopMasUsadaActionPerformed
         Habitacion h = controlador.popHabitacionMasUsada(); 
        if (h != null) {
            JOptionPane.showMessageDialog(this, "HabitaciÃ³n " + h.getNumero() + " retirada de las mÃ¡s usadas (desapilada).");
           
            txtNumero.setText(String.valueOf(h.getNumero()));
            txtTipo.setText(h.getTipo());
            chkDisponible.setSelected(h.isDisponible());
        } else {
            JOptionPane.showMessageDialog(this, "La pila de habitaciones mÃ¡s usadas estÃ¡ vacÃ­a.", "InformaciÃ³n", JOptionPane.INFORMATION_MESSAGE);
        }
    }//GEN-LAST:event_btnPopMasUsadaActionPerformed

    private void btnEncolarLimpiezaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEncolarLimpiezaActionPerformed
        try {
            int numero = Integer.parseInt(txtNumero.getText());
            Habitacion h = controlador.buscarHabitacionSecuencial(numero); 
            if (h != null) {
                controlador.encolarHabitacionParaLimpieza(h); 
                JOptionPane.showMessageDialog(this, "HabitaciÃ³n " + h.getNumero() + " encolada para limpieza.");
            } else {
                JOptionPane.showMessageDialog(this, "Primero ingrese o busque la habitaciÃ³n a encolar para limpieza.", "Error", JOptionPane.ERROR_MESSAGE);
            }
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(this, "Por favor, ingrese un nÃºmero de habitaciÃ³n para encolar.", "Error", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btnEncolarLimpiezaActionPerformed

    private void btnDesencolarLimpiezaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDesencolarLimpiezaActionPerformed
         Habitacion h = controlador.desencolarHabitacionParaLimpieza(); 
        if (h != null) {
            JOptionPane.showMessageDialog(this, "HabitaciÃ³n " + h.getNumero() + " desencolada para limpieza.");
         
            txtNumero.setText(String.valueOf(h.getNumero()));
            txtTipo.setText(h.getTipo());
            chkDisponible.setSelected(h.isDisponible());
        } else {
            JOptionPane.showMessageDialog(this, "La cola de habitaciones para limpieza estÃ¡ vacÃ­a.", "InformaciÃ³n", JOptionPane.INFORMATION_MESSAGE);
        }
    }//GEN-LAST:event_btnDesencolarLimpiezaActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(PanelHabitaciones.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(PanelHabitaciones.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(PanelHabitaciones.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(PanelHabitaciones.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new PanelHabitaciones().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextArea areaResultado;
    private javax.swing.JButton btnAgregar;
    private javax.swing.JButton btnAnterior;
    private javax.swing.JButton btnBuscar;
    private javax.swing.JButton btnDesencolarLimpieza;
    private javax.swing.JButton btnEliminar;
    private javax.swing.JButton btnEncolarLimpieza;
    private javax.swing.JButton btnMostrar;
    private javax.swing.JButton btnOrdenar;
    private javax.swing.JButton btnPopMasUsada;
    private javax.swing.JButton btnPushMasUsada;
    private javax.swing.JButton btnSiguiente;
    private javax.swing.JCheckBox chkDisponible;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JScrollBar jScrollBar1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField txtNumero;
    private javax.swing.JTextField txtTipo;
    // End of variables declaration//GEN-END:variables
}
